plain.text <- xpathApply(doc, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']", xmlValue)
plain.text
plain.text <- xpathSApply(doc, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
plain.text
help(date)
as.Date("May 5, 2017")
install.packages("lubridate")
library(lubridate)
mdy(plain.text)
myDates <- mdy(plain.text)
myDates
class(myDates)
as.numeric(myDates)
as.numeric(myDates)*1000
plain.text
myDates
as.numeric(myDates)*1000
xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
xpathSApply(doc, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
?xpathSApply()
xmlValue
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
json <- fromJSON(json)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
optionsRunner("AAPL")
optionsRunner("AAPL")
optionsRunner()
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
symbol
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
formatCalls <- function(calls){
concatCalls <- cbind(calls[[1]]$strike, calls[[1]]$expiration, calls[[1]]$lastPrice)
callsData <- as.data.frame(concatCalls)
names(callsData) <- c("Strike", "Days to Expiration", "Price")
return(callsData)
}
formatPuts <- function(puts){
puts <- cbind(puts[[2]]$strike, puts[[2]]$expiration, puts[[2]]$lastPrice)
puts <- as.data.frame(puts)
names(puts) <- c("Strike", "Days to Expiration", "Price")
return(puts)
}
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
scrapeExpiries <- function(symbol){
baseUrl <- "https://finance.yahoo.com/quote/"
url <- paste(baseUrl, symbol, "/options?p=", symbol)
# pull the html from the given url
htmlString <- getURL(url)
# parse the html string
htmlParsed <- htmlParse(htmlString, asText = TRUE)
# locate the expiries using XPath
plain.text <- xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
# convert the dates into a format that can be understood by R
expiries <- mdy(plain.text)
# convert the dates into Epoch
expiriesEpoch <- as.numeric(expiries)*1000
return(expiriesEpoch)
}
scrapeExpiries("AAPL")
scrapeExpiries <- function(symbol){
baseUrl <- "https://finance.yahoo.com/quote/"
url <- paste(baseUrl, symbol, "/options?p=", symbol)
paste(url)
# pull the html from the given url
htmlString <- getURL(url)
# parse the html string
htmlParsed <- htmlParse(htmlString, asText = TRUE)
# locate the expiries using XPath
plain.text <- xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
# convert the dates into a format that can be understood by R
expiries <- mdy(plain.text)
# convert the dates into Epoch
expiriesEpoch <- as.numeric(expiries)*1000
return(expiriesEpoch)
}
scrapeExpiries("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
scrapeExpiries("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
scrapeExpiries("AAPL")
optionsRunner()
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(optionsInstance)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
optionsResult
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsResult
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsResult <- list()
optionsRunner()
lst <- optionsRunner()
lst
lst <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
dates <- scrapeExpiries(symbol)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- getOptions(symbol, dates[1])
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
dates <- scrapeExpiries(symbol)
dates
scrapeExpiries("AAPL")
scrapeExpiries
scrapeExpiries <- function(symbol){
baseUrl <- "https://finance.yahoo.com/quote/"
url <- paste(baseUrl, symbol, "/options?p=", symbol, sep="")
# pull the html from the given url
htmlString <- getURL(url)
# parse the html string
htmlParsed <- htmlParse(htmlString, asText = TRUE)
# locate the expiries using XPath
plain.text <- xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
# convert the dates into a format that can be understood by R
expiries <- mdy(plain.text)
# convert the dates into Epoch
expiriesEpoch <- as.numeric(expiries)*1000
return(expiriesEpoch)
}
scrapeExpiries("AAPL")
x <- scrapeExpiries("AAPL")
class(x)
x[1]
x[[1]]
x[[[1]]]
as.character(x)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
x[[[1]]]
x
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(lst)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(optionsInstance[[2]])
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(as.list(optionsInstance[[1]]))
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(lst[[0]])
optionsRunner()
print(lst[0])
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(lst[[1]])
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(t)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(optionsInstance[[1]])
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/.active-rstudio-document')
scrapeExpiries("MSFT")
getOptions("MSFT", "1729100")
source('~/.active-rstudio-document')
getOptions("MSFT", "1729100")
options <- getOptions("MSFT", "1729100")
options[[1]]
str(options)
options$list
options[1]
source('~/.active-rstudio-document')
options <- getOptions("MSFT", "1729100")
source('~/.active-rstudio-document')
options <- getOptions("MSFT", "1729100")
options
getOptions("MSFT", "1729100" )
getOptions("MSFT", "1729100" )
url <- paste(baseUrl, symbol, "?date=", date, sep="")
baseUrl <- "https://query2.finance.yahoo.com/v7/finance/options/"
url <- paste(baseUrl, symbol, "?date=", date, sep="")
symbol <- "MSFT"
"1729100"
url <- paste(baseUrl, symbol, "?date=", date, sep="")
date <- "1729100"
url <- paste(baseUrl, symbol, "?date=", date, sep="")
url
url <- paste(baseUrl, symbol, "?date=", date, sep="")
json <- fromJSON(json)
json <- getURL(url)
json <- fromJSON(json)
jsonCalls <- json[[1]][["result"]]$options[[1]]$calls[[1]]
jsonCalls
json
json[[1]][["result"]]$options[[1]]$calls[[1]]
json[[1]]
source('~/.active-rstudio-document')
getOptions("AAPL", "1495756800")
getOptions("MSFT", "1495756800")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsResult("AAPL")
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/.active-rstudio-document')
expiries
source('~/.active-rstudio-document')
print(plain.text)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
expiries
scrapeExpiries("MSFT")
expiries
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
install.packages("data.table")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(calls)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(calls[[1]])
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/.active-rstudio-document')
expiries
calls
AAPL
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
calls
concatCalls <- data.frame()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
calls
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(callExp$strike)
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
concatCalls <- rbind(concatCalls, relevantInfo)
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
timeNow <- as.numeric(Sys.time())
1493942400 - timeNow
rm(list = ls())
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
optionsRunner("AAPL")
source('~/.active-rstudio-document')
time <- 1500595200
timeToExpEpoch(time)
as.numeric((Sys.time()))
as.numeric((Sys.time())) - time
time - as.numeric((Sys.time()))
(time - as.numeric(Sys.time())) / (20*60*60)
timeToExpEpoch(time)
(time - as.numeric(Sys.time())) / (20*60*60)
time
hold <- time - as.numeric(Sys.time())
hold / (24*60*60)
timeToExpEpoch(1493942400)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
hold
calls["Days to Expiration"]
hold["Days to Expiration"]
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
hold
?sapply
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
?sapply
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
hold
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
hold
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(head(calls))
hold <- optionsRunner()
head(hold)
source('~/.active-rstudio-document')
timeToExpEpoch(1493942400)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
hold
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(calls)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
class(calls)
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
?interp
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(as.vector(options[[1]]))
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(as.vector(options[[,1]]))
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(calls)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
hold <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(calls$Strike[1])
hold <- optionsRunner()
optionsRunner
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
?names
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
?names
optionsRunner()
AAPL <- optionsRunner("AAPL")
write.csv(AAPL, file="appltest.csv")
write.csv()
?write.csv
write.csv(AAPL, file="appltest.csv", rownames = FALSE)
write.csv(AAPL, file="appltest.csv", row.names = FALSE)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
AAPL <- optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
AAPL <- optionsRunner("AAPL")
write.csv(AAPL, file="appltest.csv", row.names = FALSE)
source('~/OptionsAnalyzer/graph.R')
symbol
source('~/OptionsAnalyzer/graph.R')
ls
symbol
source('~/OptionsAnalyzer/optionsQuoteAnalyzer.R')
source('~/OptionsAnalyzer/graph.R')
symbol
vis3D(symbol)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/OptionsAnalyzer/optionsQuoteAnalyzer.R')
?zoo
??zoo
source('~/OptionsAnalyzer/optionsQuoteAnalyzer.R')
