source('~/OptionsAnalyzer/yahooOptionsQuote.R')
write.csv(interpolatedCallsNAApprox, file = "mayCalls", row.names = FALSE)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
}
optionsRunner("AAPL")
matrix <- optionsRunner("AAPL")
image(matrix)
perp(matrix)
persp(matrix)
surf3D(matrx[,1], matrix[,2], matrix[,3])
surf3D(matrix[,1], matrix[,2], matrix[,3])
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
interpolatedCallsNAApprox <- optionsRunner("AAPL")
i <- interpolatedCallsNAApprox
i
surf3D()
surf3D(i[,1], i[,2], i[,3])
x <- as.matrix(interpolatedCallsNAApprox[,1])
y <- as.matrix(interpolatedCallsNAApprox[,2])
z <- as.matrix(interpolatedCallsNAApprox[,3])
z
z[is.na(z)] <- 0
z
surf3d(x,y,z)
surf3D(x, y, z)
x
y
z
surf3D(x, y, z)
??surf3D
surf3D(x, y, z, colvar=z)
image(interpolatedCallsNAApprox)
write.csv(interpolatedCallsNAApprox, file = "mayCalls", row.names = FALSE)
interpolatedCalls
interpolatedCallsNAApprox
View(interpolatedCallsNAApprox)
View(interpolatedCalls)
class(interpolatedCallsNAApprox)
z <- interpolatedCallsNAApprox[,3]
z[is.na(z)] <- 0
z
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
interpolatedCallsNAApprox <- optionsRunner()
interpolatedCallsNAApprox
rgl
surf3D
a <- interpolatedCallsNAApprox
surf3D(a[,1], a[,2], a[,3])
x <- as.matrix(interpolatedCallsNAApprox[,1])
y <- as.matrix(interpolatedCallsNAApprox[,2])
z <- as.matrix(interpolatedCallsNAApprox[,3])
surf3D(x,y,z)
is.na(x)
is.na(z)
is.na(y)
str(z)
str(y)
str(x)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
opotions = optionsRunner()
opotions
opotions
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options = optionsRunner()
options
calls <- interp(calls[,1], calls[,2], calls[,3], xo=seq(20, 215, 5), extrap=TRUE)
options
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options = optionsRunner()
options
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- optionsRunner()
optins
options
str(options)
attr(options)
attr(options, "dimnames")
write.csv(interpolatedCallsNAApprox, file = "mayCalls", row.names = FALSE)
options[,2]
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- optionsRunner()
options
write.csv(interpolatedCallsNAApprox, file = "mayCalls", row.names = FALSE)
grid.arrange
grid.arrange()
daoptions
options
library(akima)
install.packages("lattice")
install.packages("lattice")
library(lattice)
s <- with(options, interp(x, y, z))
write.csv(interpolatedCallsNAApprox, file = "mayCalls", row.names = FALSE)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- interp(calls[,1], calls[,2], calls[,3], xo=seq(20, 215, 5), yo=seq(3, 20, 1), extrap=TRUE)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- optionsRunner()
?akima
predict(options)
optionsm
options
predict(options)
options
?matrix
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- interp.new(calls[,1], calls[,2], calls[,3], xo=seq(20, 215, 5), yo=seq(3, 20, 1), extrap=TRUE)
options <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- optionsRunner()
options
myList <- list()
myList[['123']] <- getOptions(symbol, "1493942400")
myList[['123']] <- 1234
myList[['1234']] <- 1234
myList[['1234']] <- 12345
myList
myList[['123']]
epochVec <- c('213321321'.'3123231321')
myUrl <- "https://finance.yahoo.com/quote/AAPL/options?p=AAPL"
tst <- getUrl(myUrl)
tst <- getURL(myUrl)
head(tst)
nrow(url)
help(rvest)
??rvest
library(RCurl)
library(XML)
doc = htmlParse(tst, asText=TRUE)
doc
plain.text <- xpathSApply(doc, "//p", xmlValue)
plain.text
plain.text <- xpathSApply(doc, "//div[@class = 'Fz(s)']", xmlValue)
plain.text
plain.text <- xpathSApply(doc, "//select[@class = 'Fz(s)']", xmlValue)
plain.text
plain.text <- xpathSApply(doc, "//div[@class = 'Fz(start)']", xmlValue)
plain.text <- xpathSApply(doc, "//div[@class = 'F1(start)']", xmlValue)
plain.text
plain.text <- xpathSApply(doc, "//div[@class = 'Fl(start)']", xmlValue)
plain.text
plain.text <- xpathSApply(doc, "//*[@id="quote-leaf-comp"]/section/div/div[1]", xmlValue)
plain.text <- xpathSApply(doc, "//*[@id="quote-leaf-comp"]//section//div//div[1]", xmlValue)
plain.text <- xpathSApply(doc, "/*[@id="quote-leaf-comp"]/section/div/div[1]", xmlValue)
plain.text <- xpathSApply(doc, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']", xmlValue)
plain.text
help("xpathSApply")
plain.text <- xpathApply(doc, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']", xmlValue)
plain.text
plain.text <- xpathSApply(doc, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
plain.text
help(date)
as.Date("May 5, 2017")
install.packages("lubridate")
library(lubridate)
mdy(plain.text)
myDates <- mdy(plain.text)
myDates
class(myDates)
as.numeric(myDates)
as.numeric(myDates)*1000
plain.text
myDates
as.numeric(myDates)*1000
xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
xpathSApply(doc, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
?xpathSApply()
xmlValue
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
json <- fromJSON(json)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
optionsRunner("AAPL")
optionsRunner("AAPL")
optionsRunner()
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
symbol
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
formatCalls <- function(calls){
concatCalls <- cbind(calls[[1]]$strike, calls[[1]]$expiration, calls[[1]]$lastPrice)
callsData <- as.data.frame(concatCalls)
names(callsData) <- c("Strike", "Days to Expiration", "Price")
return(callsData)
}
formatPuts <- function(puts){
puts <- cbind(puts[[2]]$strike, puts[[2]]$expiration, puts[[2]]$lastPrice)
puts <- as.data.frame(puts)
names(puts) <- c("Strike", "Days to Expiration", "Price")
return(puts)
}
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
scrapeExpiries <- function(symbol){
baseUrl <- "https://finance.yahoo.com/quote/"
url <- paste(baseUrl, symbol, "/options?p=", symbol)
# pull the html from the given url
htmlString <- getURL(url)
# parse the html string
htmlParsed <- htmlParse(htmlString, asText = TRUE)
# locate the expiries using XPath
plain.text <- xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
# convert the dates into a format that can be understood by R
expiries <- mdy(plain.text)
# convert the dates into Epoch
expiriesEpoch <- as.numeric(expiries)*1000
return(expiriesEpoch)
}
scrapeExpiries("AAPL")
scrapeExpiries <- function(symbol){
baseUrl <- "https://finance.yahoo.com/quote/"
url <- paste(baseUrl, symbol, "/options?p=", symbol)
paste(url)
# pull the html from the given url
htmlString <- getURL(url)
# parse the html string
htmlParsed <- htmlParse(htmlString, asText = TRUE)
# locate the expiries using XPath
plain.text <- xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
# convert the dates into a format that can be understood by R
expiries <- mdy(plain.text)
# convert the dates into Epoch
expiriesEpoch <- as.numeric(expiries)*1000
return(expiriesEpoch)
}
scrapeExpiries("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
scrapeExpiries("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
scrapeExpiries("AAPL")
optionsRunner()
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(optionsInstance)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
optionsResult
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsResult
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsResult <- list()
optionsRunner()
lst <- optionsRunner()
lst
lst <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
dates <- scrapeExpiries(symbol)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
options <- getOptions(symbol, dates[1])
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
dates <- scrapeExpiries(symbol)
dates
scrapeExpiries("AAPL")
scrapeExpiries
scrapeExpiries <- function(symbol){
baseUrl <- "https://finance.yahoo.com/quote/"
url <- paste(baseUrl, symbol, "/options?p=", symbol, sep="")
# pull the html from the given url
htmlString <- getURL(url)
# parse the html string
htmlParsed <- htmlParse(htmlString, asText = TRUE)
# locate the expiries using XPath
plain.text <- xpathSApply(htmlParsed, "//div[@class = 'Fl(start) Pend(18px) option-contract-control drop-down-selector']//option", xmlValue)
# convert the dates into a format that can be understood by R
expiries <- mdy(plain.text)
# convert the dates into Epoch
expiriesEpoch <- as.numeric(expiries)*1000
return(expiriesEpoch)
}
scrapeExpiries("AAPL")
x <- scrapeExpiries("AAPL")
class(x)
x[1]
x[[1]]
x[[[1]]]
as.character(x)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
x[[[1]]]
x
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(lst)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(optionsInstance[[2]])
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(as.list(optionsInstance[[1]]))
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(lst[[0]])
optionsRunner()
print(lst[0])
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(lst[[1]])
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(t)
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(optionsInstance[[1]])
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/.active-rstudio-document')
scrapeExpiries("MSFT")
getOptions("MSFT", "1729100")
source('~/.active-rstudio-document')
getOptions("MSFT", "1729100")
options <- getOptions("MSFT", "1729100")
options[[1]]
str(options)
options$list
options[1]
source('~/.active-rstudio-document')
options <- getOptions("MSFT", "1729100")
source('~/.active-rstudio-document')
options <- getOptions("MSFT", "1729100")
options
getOptions("MSFT", "1729100" )
getOptions("MSFT", "1729100" )
url <- paste(baseUrl, symbol, "?date=", date, sep="")
baseUrl <- "https://query2.finance.yahoo.com/v7/finance/options/"
url <- paste(baseUrl, symbol, "?date=", date, sep="")
symbol <- "MSFT"
"1729100"
url <- paste(baseUrl, symbol, "?date=", date, sep="")
date <- "1729100"
url <- paste(baseUrl, symbol, "?date=", date, sep="")
url
url <- paste(baseUrl, symbol, "?date=", date, sep="")
json <- fromJSON(json)
json <- getURL(url)
json <- fromJSON(json)
jsonCalls <- json[[1]][["result"]]$options[[1]]$calls[[1]]
jsonCalls
json
json[[1]][["result"]]$options[[1]]$calls[[1]]
json[[1]]
source('~/.active-rstudio-document')
getOptions("AAPL", "1495756800")
getOptions("MSFT", "1495756800")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsResult("AAPL")
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/.active-rstudio-document')
expiries
source('~/.active-rstudio-document')
print(plain.text)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
expiries
scrapeExpiries("MSFT")
expiries
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
install.packages("data.table")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(calls)
optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(calls[[1]])
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner()
source('~/.active-rstudio-document')
expiries
calls
AAPL
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
calls
concatCalls <- data.frame()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
calls
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
print(callExp$strike)
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
concatCalls <- rbind(concatCalls, relevantInfo)
calls <- optionsRunner()
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
timeNow <- as.numeric(Sys.time())
1493942400 - timeNow
rm(list = ls())
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
source('~/OptionsAnalyzer/yahooOptionsQuote.R')
optionsRunner("AAPL")
